// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SSquaredApplication.DataAccessLayer;

#nullable disable

namespace SSquaredApplication.Migrations
{
    [DbContext(typeof(SSEnterpriseContext))]
    [Migration("20230811174628_CreateDB_Initial")]
    partial class CreateDB_Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.15");

            modelBuilder.Entity("SSquaredApplication.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReportingManagerEmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Admin",
                            LastName = "Admin",
                            ReportingManagerEmployeeId = 0
                        });
                });

            modelBuilder.Entity("SSquaredApplication.Models.EmployeeRoles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("SSquaredApplication.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Name = "Director"
                        },
                        new
                        {
                            RoleId = 2,
                            Name = "IT Support"
                        },
                        new
                        {
                            RoleId = 3,
                            Name = "Support"
                        },
                        new
                        {
                            RoleId = 4,
                            Name = "Accounting"
                        },
                        new
                        {
                            RoleId = 5,
                            Name = "Sales"
                        },
                        new
                        {
                            RoleId = 6,
                            Name = "Analyst"
                        },
                        new
                        {
                            RoleId = 7,
                            Name = "IT Sales"
                        });
                });

            modelBuilder.Entity("SSquaredApplication.Models.Employee", b =>
                {
                    b.HasOne("SSquaredApplication.Models.Role", null)
                        .WithMany("Employees")
                        .HasForeignKey("RoleId");
                });

            modelBuilder.Entity("SSquaredApplication.Models.EmployeeRoles", b =>
                {
                    b.HasOne("SSquaredApplication.Models.Employee", "Employee")
                        .WithMany("EmployeeRoles")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SSquaredApplication.Models.Employee", b =>
                {
                    b.Navigation("EmployeeRoles");
                });

            modelBuilder.Entity("SSquaredApplication.Models.Role", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
